{"version":3,"sources":["client.umd.js","proxy.es6.js"],"names":["global","factory","define","amd","exports","mod","ES6RestClient","this","_classCallCheck","instance","Constructor","TypeError","objectToQueryString","obj","Object","keys","filter","key","map","value","encodeURIComponent","join","prefixedTimestamp","PREFIX","TIMESTAMP","Date","getTime","appendQueryStringToURL","url","queryString","mark","indexOf","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","defaultSettings","undefined","userDefinedSettings","properties","querystring","fetchConfiguration","QUERYSTRING_PARAMETERS","Symbol","BODY_PAYLOAD","method","baseURI","params","jsonp","callback","_httpMethod","type","httpVerb","assign","body","Configuration","settings","payload","get","configuration","route","jsonPCallback","reset","_jsonpFetch","callbackParamName","callbackFunctionName","scriptId","scriptElement","scriptSource","Promise","resolve","reject","document","createElement","src","id","addEventListener","window","data","Reflect","deleteProperty","parentNode","removeChild","getElementsByTagName","documentElement","appendChild","RestClient","_fetch","fetch","_x","_x2","_x3","apply","arguments","toString","initObj","_trapMethod","thisArg","argumentsList","DEFAULT_HTTP_VERB","propertiesLength","currentProperty","isMethodName","isHTTPVerb","hasDefaultHTTPVerb","pop","computed","restClientProxy","_trapProperty","propKey","receiver","push","Proxy"],"mappings":"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","file":"client.umd.js","sourcesContent":[null,"import Configuration from './configuration.es6.js';\r\nimport RestClient from './client.es6.js';\r\n\r\n/************************************/\r\n/* default assignments              */\r\n/************************************/\r\n\r\nconst configuration = new Configuration();\r\n\r\n/************************************/\r\n/* helper functions                 */\r\n/************************************/\r\n\r\n/**\r\n * Processes any method invokation on the proxied RestClient class by\r\n * checking whether the former exists in the definition of the latter: if positive,\r\n * configures the client with any provided arguments and forwards the call\r\n * to the original method implementation; if negative, stores the non-existing\r\n * method name as route fragment in the configuration and performs a default\r\n * get() method call on the target RestClient class interface.\r\n *\r\n * @param {RestClient} target The RestClient class to which the Proxy has been applied\r\n * @param {Object} thisArg The 'this' argument for the call\r\n * @param {Array} argumentsList Array of arguments passed to the trapped method call\r\n * @return {RestClient|Promise<Response>|Promise<any>} \r\n */\r\n\r\nconst _trapMethod = function _trapMethod(target, thisArg, argumentsList){\r\n    \r\n    const DEFAULT_HTTP_VERB = 'get';\r\n    \r\n    let properties,\r\n        propertiesLength,\r\n        currentProperty,\r\n        isMethodName,\r\n        isHTTPVerb,\r\n        hasDefaultHTTPVerb;\r\n\r\n    properties = configuration.properties;\r\n    propertiesLength = properties.length;\r\n    currentProperty = properties[propertiesLength-1];\r\n    isMethodName = (typeof configuration[currentProperty] === 'function');\r\n    isHTTPVerb = isMethodName && Reflect.apply(configuration[properties.pop()],\r\n                                               configuration,\r\n                                               argumentsList);\r\n    hasDefaultHTTPVerb = !isMethodName &&\r\n                         !isHTTPVerb &&\r\n                          Reflect.apply(configuration[DEFAULT_HTTP_VERB],\r\n                                        configuration,\r\n                                        argumentsList);\r\n        \r\n    return (isHTTPVerb || hasDefaultHTTPVerb) ?\r\n        Reflect.apply(target.fetch, target, configuration.computed) :\r\n            restClientProxy;\r\n                    \r\n};\r\n\r\n/**\r\n * Processes any getter invokation on the proxied RestClient class\r\n * by storing properties keys as route fragments in the configuration object\r\n *  \r\n * @param {RestClient} target The RestClient class to which the Proxy has been applied\r\n * @param {String} propKey The trapped property key\r\n * @param {Proxy} receiver The Proxy object applied to the RestClient class\r\n * @return {RestClient} \r\n */\r\n\r\nconst _trapProperty = function _trapProperty(target, propKey, receiver){\r\n\r\n    configuration.properties.push(propKey);\r\n\r\n    return receiver;\r\n\r\n}\r\n\r\n/************************************/\r\n/* library entry point              */\r\n/************************************/\r\n\r\n/**\r\n * Wraps the RestClient static class with a Proxy object\r\n * in order to trap and subsequently process any properties\r\n * and methods invoked on the former\r\n */\r\n\r\nconst restClientProxy = new Proxy(RestClient,\r\n{\r\n\r\n    get(target, propKey, receiver) {\r\n\r\n        return _trapProperty(target, propKey, receiver);\r\n\r\n    },\r\n\r\n    apply(target, thisArg, argumentsList) {\r\n\r\n        return _trapMethod(target, thisArg, argumentsList);\r\n\r\n    }\r\n\r\n});\r\n\r\nexport default restClientProxy;\r\n"],"sourceRoot":"/source/"}